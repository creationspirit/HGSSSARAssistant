// <auto-generated />
using HGSSSARAssistant.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HGSSSARAssistant.DAL.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("HGSSSARAssistant.Core.Availability", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndTime");

                    b.Property<long?>("LocationId");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Availability");
                });

            modelBuilder.Entity("HGSSSARAssistant.Core.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("HGSSSARAssistant.Core.Expertise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Expertise");
                });

            modelBuilder.Entity("HGSSSARAssistant.Core.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<decimal>("Latitude");

                    b.Property<decimal>("Longitude");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("HGSSSARAssistant.Core.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("HGSSSARAssistant.Core.Station", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("LocationId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Station");
                });

            modelBuilder.Entity("HGSSSARAssistant.Core.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalContactNumbers");

                    b.Property<string>("Address");

                    b.Property<string>("AndroidPushId");

                    b.Property<long?>("AvailabilityId");

                    b.Property<long?>("CategoryId");

                    b.Property<string>("ContactNumber");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("PasswordSalt");

                    b.Property<long?>("RoleId");

                    b.Property<long?>("StationId");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HGSSSARAssistant.Core.Availability", b =>
                {
                    b.HasOne("HGSSSARAssistant.Core.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("HGSSSARAssistant.Core.Expertise", b =>
                {
                    b.HasOne("HGSSSARAssistant.Core.User")
                        .WithMany("Expertise")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("HGSSSARAssistant.Core.Station", b =>
                {
                    b.HasOne("HGSSSARAssistant.Core.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("HGSSSARAssistant.Core.User", b =>
                {
                    b.HasOne("HGSSSARAssistant.Core.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId");

                    b.HasOne("HGSSSARAssistant.Core.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("HGSSSARAssistant.Core.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("HGSSSARAssistant.Core.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId");
                });
#pragma warning restore 612, 618
        }
    }
}
