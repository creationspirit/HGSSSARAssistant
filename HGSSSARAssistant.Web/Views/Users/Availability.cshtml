@model UserAvailabilityViewModel
@{
    ViewData["Title"] = "UserAvailability";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>User availability schedule</h2>
<hr />
<div class="row">
    <div class="col-md-12">
        <h3>@Model.Name</h3>
        <div id='calendar'></div>
        <div class="form-group">
            <input type="submit" value="Save" class="js-submit btn btn-info" data-user-id="@Model.UserId" />
        </div>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
<div class="js-modal modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div class="form-group">
                    <input type="text" name="Description" placeholder="Enter event description..." class="js-map-description form-control" />
                    <input type="text" name="Address" class="js-map-address form-control" readonly="readonly"/>
                    <div class="map">
                        <div class="js-map map__container"></div>
                        <input name="AddressLat" class="js-map-lat" type="hidden" />
                        <input name="AddressLng" class="js-map-lng" type="hidden" />
                    </div>
                </div>
            </div>
            <input asp-for="UserId" class="form-control" type="hidden"/>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal">Save changes</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript">
        $('.js-submit').click(function (e) {
            var $button = $(e.target);
            e.preventDefault();

            var button = $(e.target);
            var userId = button.data('user-id');

            var eventsFromCalendar = $('#calendar').fullCalendar('clientEvents').map(function (event) {
                var end = event.end.clone();
                var start = event.start.clone();

                if (start.add(1, 'day').startOf('day').isSame(end)) {
                    end = end.subtract(1, 'day').endOf('day');
                }
    
                return {
                    startTime: event.start.format('HH:mm:ss'),
                    endTime: end.format('HH:mm:ss'),
                    day: event.start.day(),
                    location: {
                        description: event.location.description,
                        name: event.location.name,
                        latitude: event.location.lat,
                        longitude: event.location.lng
                    }
                };
            });

            $button.prop('disabled', true);
            var result = { UserId: @Model.UserId, Availability: eventsFromCalendar };
            fetch('@Url.Action("Availability")', {
                method: 'POST',
                body: JSON.stringify(result),
                credentials: 'include',
                headers: {
                    "Content-Type": 'application/json'
                }
            }).then(function () {
                $button.prop('disabled', false);
                
                iziToast.show({
                    title: 'Changes saved',
                    message: 'Availability schedule was updated.',
                    position: 'topRight',
                    color: 'green',
                    progressBar: false,
                    closeOnEscape: true
                });
            }).catch(function () {
                $button.prop('disabled', false);
    
                iziToast.show({
                    title: 'Error',
                    message: 'Unable to update schedule!',
                    position: 'topRight',
                    color: 'red',
                    progressBar: false,
                    closeOnEscape: true
                });
            });
        });
</script>
}
